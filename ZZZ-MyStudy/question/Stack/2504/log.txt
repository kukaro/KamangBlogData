기존 스택에 비해서는 난이도가 꽤 높은문제.
여러 함정이 존재하며 함정을 피하는 방법 또한 언어마다 상이하다.
문자=숫자형태의 꼴을 취하는 언어들이 조금 불리할 수 있다.(c나 c++,java)
왜냐하면 괄호들의 아스키코드가 실 계산 숫자 범위안에 들어가기 때문에 겹칠 수 있다.
따라서 괄호들을 매핑해주는 작업이 필요하기 때문.
C에서는 무조건 이 방법을 써야하며 자바나 c++은 문자열 클래스로 래핑하면된다.
문자열 클래스로 래핑하는 과정이 귀찮으면 C처럼 다른 숫자 값으로 옮기는 작업이 필요하다.

그 다음은 괄호의 유효성 확인인데 여러가지 예외가 존재한다.
[[[ - 왼쪽 괄호만 존재하는 유형
))) - 오른쪽 괄호만 존재하는 유형
[]] - 오른쪽 괄호가 남는 유형
(() - 왼쪽 괄호가 남는 유형
none - 없는 유형

top을 하기전에 반드시 비었는지 확인해줘야한다.
아니면 런타임 에러가 나기 때문.

확실한건 닫는 괄호가 나왔을때는 로직을 거쳐서 무조건 여는 괄호가 올바르게 나와야한다는것.
그것만 체크할 수 있으면된다.
