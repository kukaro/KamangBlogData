#include <iostream>
#include <vector>

#define INF 0x7FFFFFF
using namespace std;

int T;
int K;
vector<int> ARR;
vector<vector<int>> memo;
vector<vector<int>> app;

void print_memo() {
    cout << "**********" << endl;
    for (int i = 1; i <= K; i++) {
        for (int j = 1; j <= K; j++) {
            cout << memo[i][j] << " ";
        }
        cout << endl;
    }
    cout << "**********" << endl;
}

void print_app() {
    cout << "**********" << endl;
    for (int i = 1; i <= K; i++) {
        for (int j = 1; j <= K; j++) {
            cout << app[i][j] << " ";
        }
        cout << endl;
    }
    cout << "**********" << endl;
}

int main() {
    int tmp;
    int min_val;
    cin >> T;
    for (int t = 1; t <= T; t++) {
        cin >> K;
        ARR.clear();
        ARR.push_back(0);
        memo.clear();
        memo.resize(K + 1, vector<int>(K + 1, 0));
        app.clear();
        app.resize(K + 1, vector<int>(K + 1, 0));
        for (int k = 1; k <= K; k++) {
            cin >> tmp;
            ARR.push_back(tmp);
        }
        for (int size = 1; size <= K; size++) {
            for (int i = 1; i <= K; i++) {
                if (size == 1) {
                    memo[i][i] = ARR[i];
                    app[i][i] = 0;
                } else if (size == 2) {
                    memo[i][i + 1] = ARR[i] + ARR[i + 1];
                    app[i][i + 1] = memo[i][i+1];
                } else {
                    min_val = INF;
                    if (i + size - 1 <= K) {
                        for (int j = i; j < i + size - 1; j++) {
                            tmp = memo[i][j] + memo[j + 1][i + size - 1];

                            if (min_val > tmp) {
                                cout<<memo[i][j]<<":"<<memo[j + 1][i + size - 1]<<endl;
                                min_val = tmp;
                                app[i][i + size - 1] =
                                        memo[i][j] + memo[j + 1][i + size - 1] + app[i][j] + app[j + 1][i + size - 1];
                            }
                        }
                        memo[i][i + size - 1] = min_val;
                    }
                }
            }
        }
//        cout << memo[1][K]+app[1][K] << endl;
        print_memo();
        print_app();
    }
    return 0;
}